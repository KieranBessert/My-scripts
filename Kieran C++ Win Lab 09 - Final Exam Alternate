// This program takes input from a file and outputs information to a file and the screen
// This Program calculates final grades for a list of students.
// It generates numeric average for each student, then assign a letter grade for each student.
// 
// Created by Kieran Bessert 3/7/2020
// Last edited 3/10/2020

#include <iostream>
#include <fstream>  // Included to use files as I/O 
#include <cstdlib>  // Included to use the exit() function
using namespace std;

struct Student
{
    string nameFirst, nameLast;
    double quiz1, quiz2, quiz3, quiz4, quiz5;
    double Lab1, Lab2, Lab3, Lab4, Midterm, Final;
    double Average;
    char Grade;
};
Student student_data[25];

ifstream in_stream;
ofstream out_stream;

void fill_data(ifstream &stream);

void close_files();
// Precondition: Opened I/O File streams
// Postcondition: Closes the I/O File Streams

int main()
{
    cout.setf(ios::fixed);
    cout.setf(ios::showpoint);
    cout.precision(2);

    char In_File_Name[16];
    cout << "Enter the input file name (maximum of 15 characters)\n";
    cout << "[The default file is ' input.dat ']\n" << endl;
    cin >> In_File_Name;            // The input file contains nothing but numbers of type int separated by blanks or line breaks.  
                                    // There may be positive, negative, or 0 values in the list.


    in_stream.open(In_File_Name);   // Open input file
    if (in_stream.fail())           // Check to see if open function fails
    {
        cout << "Input file opening failed.\n";
        exit(1);
    }
    out_stream.open("output.dat");  // Open the output file
                                    // Output to the screen and file are identical
    if (out_stream.fail())          // Checks to see if open function fails
    {
        cout << "Output file opening failed.\n";
        exit(1);
    }

    fill_data(in_stream);

    close_files();                      // Calls a function to close the I/O stream files.

    return 0;
}

void fill_data(ifstream &stream)
{   
    int count1(0);
    double temp_quiz(0), temp_Lab(0), temp_Midterm(0), temp_Final(0);

    while (in_stream >> student_data[count1].nameFirst >> student_data[count1].nameLast
        >> student_data[count1].quiz1 >> student_data[count1].quiz2 >> student_data[count1].quiz3 >> student_data[count1].quiz4 >> student_data[count1].quiz5
        >> student_data[count1].Lab1 >> student_data[count1].Lab2 >> student_data[count1].Lab3 >> student_data[count1].Lab4
        >> student_data[count1].Midterm >> student_data[count1].Final && count1 < 25)
    {
        cout << student_data[count1].nameFirst << "\t";
        cout << student_data[count1].nameLast << "\t";
        cout << student_data[count1].quiz1 << "\t";
        cout << student_data[count1].quiz2 << "\t";
        cout << student_data[count1].quiz3 << "\t";
        cout << student_data[count1].quiz4 << "\t";
        cout << student_data[count1].quiz5 << "\t";
        cout << student_data[count1].Lab1 << "\t";
        cout << student_data[count1].Lab2 << "\t";
        cout << student_data[count1].Lab3 << "\t";
        cout << student_data[count1].Lab4 << "\t";
        cout << student_data[count1].Midterm << "\t";
        cout << student_data[count1].Final << "\t";

        temp_quiz = student_data[count1].quiz1 + student_data[count1].quiz2 + student_data[count1].quiz3 + student_data[count1].quiz4 + student_data[count1].quiz5;
        temp_quiz = temp_quiz / 5;
        temp_quiz = temp_quiz * 0.25;
        cout << temp_quiz << endl;

        temp_Lab = student_data[count1].Lab1 + student_data[count1].Lab2 + student_data[count1].Lab3 + student_data[count1].Lab4;
        temp_Lab = temp_Lab / 4;
        temp_quiz = temp_quiz * 0.35;
        cout << temp_Lab << endl;

        temp_Midterm = temp_Midterm * 0.2;
        temp_Final = temp_Final * 0.2;
        student_data[count1].Average = temp_quiz + temp_Lab + temp_Midterm + temp_Final;

        cout << student_data[count1].Average << "\t";


        ++count1;
    }
}


void close_files()
{
    in_stream.close();              // Close input file
    out_stream.close();             // Close output file
}


/*
Double grade
if (grade >= 90) // A
    {

    }
else if (grade < 90 && grade >= 80) // B
    {

    }
else if (grade < 80 && grade >= 70) // C
    {

    }
else if (grade < 70 && grade >= 60) // D
    {
    
    }
else if (grade < 60) // F
    {
    
    }
*/

/*
    cout << endl << "The input file ";
    Your program will output the following to the screen:
    a well-aligned table consisting of student first name,
    last name, final average, letter grade

    out_stream << "The input file ";
    Your program will write the following to an output file:
    a well-aligned table consisting of student first name,
    last name, all scores from the input file in the correct 
    order followed by the final average and letter grade.

    Both your screen output and file output should have appropriate column headings.
*/


/*
Include at least one function.

sample input:

Bob Smith 100 90 95 70 63 100 100 90 85 65 85
Sue Jones 70 85 73 0 52 90 80 76 83 70 56

sample  screen  output:

First Name       Last Name               Average        Grade
Bob                    Smith                            83.71          B
Sue                    Jones                            67.99          D
*/
