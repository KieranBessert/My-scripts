// This program takes input from a file and outputs information to a file and the screen
// This Program calculates final grades for a list of students.
// It generates numeric average for each student, then assign a letter grade for each student.
// 
// Created by Kieran Bessert 3/7/2020
// Last edited 3/10/2020

#include <iostream>
#include <fstream>  // Included to use files as I/O 
#include <cstdlib>  // Included to use the exit() function
using namespace std;

struct Student
{
    string nameFirst, nameLast;
    double quiz1, quiz2, quiz3, quiz4, quiz5;
    double Lab1, Lab2, Lab3, Lab4, Midterm, Final;
    double Average;
    char Grade;
};
Student student_data[25];

ifstream in_stream;
ofstream out_stream;

void fill_data(ifstream &stream);

void close_files();
// Precondition: Opened I/O File streams
// Postcondition: Closes the I/O File Streams

int main()
{
    cout.setf(ios::fixed);
    cout.setf(ios::showpoint);
    cout.precision(2);

    char In_File_Name[16];
    cout << "Enter the input file name (maximum of 15 characters)\n";
    cout << "[The default file is ' input.dat ']\n" << endl;
    cin >> In_File_Name;            // The input file contains nothing but numbers of type int separated by blanks or line breaks.  
                                    // There may be positive, negative, or 0 values in the list.
    cout << endl;

    in_stream.open(In_File_Name);   // Open input file
    if (in_stream.fail())           // Check to see if open function fails
    {
        cout << "Input file opening failed.\n";
        exit(1);
    }
    out_stream.open("output.dat");  // Open the output file
                                    // Output to the screen and file are identical
    if (out_stream.fail())          // Checks to see if open function fails
    {
        cout << "Output file opening failed.\n";
        exit(1);
    }

    fill_data(in_stream);

    close_files();                      // Calls a function to close the I/O stream files.

    return 0;
}

void fill_data(ifstream &stream)
{   
    int count1(0);
    double temp_quiz(0), temp_Lab(0), temp_Midterm(0), temp_Final(0);

    cout << "First" << "\t" << "Last" << "\t" << endl;
    cout << "Name" << "\t" << "Name" << "\t"
        << "Average" << "\t" << "Grade" << "\t" << endl;

    out_stream << "First" << "\t" << "Last" << "\t" << endl;
    out_stream << "Name" << "\t" << "Name" << "\t"
        << "Quiz 1" << "\t"<< "Quiz 2" << "\t" << "Quiz 3" << "\t" << "Quiz 4" << "\t" << "Quiz 5" << "\t"
        << "Lab 1" << "\t" << "Lab 2" << "\t" << "Lab 3" << "\t" << "Lab 4" << "\t"
        << "Midterm" << "\t" << "Final" << "\t" << "Average" << "\t" << "Grade" << "\t" << endl;

    while (in_stream >> student_data[count1].nameFirst >> student_data[count1].nameLast
        >> student_data[count1].quiz1 >> student_data[count1].quiz2 >> student_data[count1].quiz3 >> student_data[count1].quiz4 >> student_data[count1].quiz5
        >> student_data[count1].Lab1 >> student_data[count1].Lab2 >> student_data[count1].Lab3 >> student_data[count1].Lab4
        >> student_data[count1].Midterm >> student_data[count1].Final && count1 < 25)
    {
        cout << student_data[count1].nameFirst << "\t" << student_data[count1].nameLast << "\t";

        out_stream << student_data[count1].nameFirst << "\t" << student_data[count1].nameLast << "\t"
            << student_data[count1].quiz1 << "\t" << student_data[count1].quiz2 << "\t" << student_data[count1].quiz3 << "\t"
            << student_data[count1].quiz4 << "\t" << student_data[count1].quiz5 << "\t"
            << student_data[count1].Lab1 << "\t" << student_data[count1].Lab2 << "\t"
            << student_data[count1].Lab3 << "\t" << student_data[count1].Lab4 << "\t"
            << student_data[count1].Midterm << "\t" << student_data[count1].Final << "\t";

        temp_quiz = student_data[count1].quiz1 + student_data[count1].quiz2 + student_data[count1].quiz3 + student_data[count1].quiz4 + student_data[count1].quiz5;
        temp_quiz = (temp_quiz / 5) * 0.25;

        temp_Lab = student_data[count1].Lab1 + student_data[count1].Lab2 + student_data[count1].Lab3 + student_data[count1].Lab4;
        temp_Lab = (temp_Lab / 4) * 0.35;

        temp_Midterm = student_data[count1].Midterm * 0.2;
        temp_Final = student_data[count1].Final * 0.2;

        student_data[count1].Average = temp_quiz + temp_Lab + temp_Midterm + temp_Final;
        cout << student_data[count1].Average << "\t";

        out_stream.setf(ios::fixed);
        out_stream.precision(2);
        out_stream << student_data[count1].Average << "\t";
        out_stream.precision(0);

        if (student_data[count1].Average >= 90) // A
        {
            student_data[count1].Grade = 65;
            out_stream << student_data[count1].Grade << endl;
            cout << student_data[count1].Grade << endl;
        }
        else if (student_data[count1].Average < 90 
            && student_data[count1].Average >= 80) // B
        {
            student_data[count1].Grade = 66;
            out_stream << student_data[count1].Grade << endl;
            cout << student_data[count1].Grade << endl;
        }
        else if (student_data[count1].Average < 80 
            && student_data[count1].Average >= 70) // C
        {
            student_data[count1].Grade = 67;
            out_stream << student_data[count1].Grade << endl;
            cout << student_data[count1].Grade << endl;
        }
        else if (student_data[count1].Average < 70 
            && student_data[count1].Average >= 60) // D
        {
            student_data[count1].Grade = 68;
            out_stream << student_data[count1].Grade << endl;
            cout << student_data[count1].Grade << endl;
        }
        else if (student_data[count1].Average < 60) // F
        {
            student_data[count1].Grade = 70;
            out_stream << student_data[count1].Grade << endl;
            cout << student_data[count1].Grade << endl;
        }

        ++count1;
    }
}


void close_files()
{
    in_stream.close();              // Close input file
    out_stream.close();             // Close output file
}
