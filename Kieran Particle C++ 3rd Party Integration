/*
This program publishes the function 'notification' and will Play a tune when the function is called from 3rd party software
Created by Kieran Bessert 03/03/2020
Last edited 03/03/2020
*/
const int BUZZER=D2;
const int melody[]={1900,2550,2550,1900,1900,2550,2550,1900};    // notes in the tune
const int noteDurations[]={4,8,8,4,4,8,8,4};                      // note Length

void setup() {
    pinMode(BUZZER, OUTPUT);
    Particle.function("notification", tune);
}

void loop() {

}

int tune (String play)
{
    for (int thisNote = 0; thisNote < 8; thisNote++) {          // ergodic all notes
            int noteDuration = 1000/noteDurations[thisNote];    // calculate the note duration
            tone(BUZZER, melody[thisNote], noteDuration);       // let speaker sonds
            int pauseBetweenNotes = noteDuration * 1.30;        // set a minimum time between notes
            delay(pauseBetweenNotes);                           // delay for the while
            noTone(BUZZER);                                     // stop the tone playing:
            }
    return 0;
}
